{"course code":"ITPC12","course title":"Data Structures","number of credits":"4","prerequisites":"CSIR11","course type":"PC","branch":"it","course learning objectives":"- This course introduces the concept of Data Structures used in various computer science applicationsn- The students are introduced to understand and efficiently apply various data structures such as stacks, queues, linked lists, trees and graphs for solving various computing problems using C programming language.","course content":"- Fundamentals of pointers & Files:nPointers in C: pointer declaration, passing pointer to functions, pointers and arrays, dynamic memory allocation, Files and related operations.nSearching techniques: Linear and Binary, Sorting techniques: Selection, Bubble, Insertion, Merge sort, QuicksortnSimple Data StructuresnArrays based Linear Data Str: Array storage, sparse arrays; Transpose, addition, and multiplication of sparse matrices, Stacks and Queues and their applications, multiple stacks and queues in an array.nLinked Data StructuresnSingly, Doubly & Circular Linked Lists; representation, operations and applications, linked stacks and queues. linked lists based polynomial additionnAdvanced Data StructuresnTrees, Basic concepts and definitions of a tree and binary tree and associated terminology, Binary tree traversal techniques, some more operations on binary trees, Heaps and heapsort,","reference books":"- E Horowitz and S. Sahni: Fundamentals of Data Structures in C, Second Edition, Universities Press, Hyderabad.n- R.L. Kruse: Data Structures & Program Design in C, PHI.n- D.F. Knuth: The art of Computer Programming Vol 1, Narosa Publications, 1985.n- Byron S. Gottfried & J K Chhabra: Theory and Problems of Programming with C Language, Schaumâ€™s Outlines Series, TMH, 2005.","course outcomes":"- Develop skill to identify and determine the usage of various data structures, operations, associated algorithms and implement their applications.n- Apply knowledge of pointers, memory allocation and string handling for solving programming problems.n- Understand the concept of trees and graphs, their implementation and applications.n- Able to implement standard algorithms for searching and sorting.n- Analyze efficiency of different algorithms using time and space complexity."}
