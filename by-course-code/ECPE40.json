{"course code":"ECPE40","course title":"Object Oriented Programming","number of credits":"3","prerequisites":"CSIR11","course type":"PE","branch":"ec","course learning objectives":"To learn object-oriented programming and utilize it in practical applications by demonstrating adeptness of object oriented programming in developing solution to problems demonstrating usage of data abstraction, encapsulation, features of exception handling, dynamic binding and utilization of polymorphism, and applets.","course content":"## UNIT InnINTRODUCTION: Object-Oriented Paradigm, Features of Object Oriented Programming in C++, Fundamentals of data types, Operators and Expressions, Control flow, Arrays, Strings, Pointers and Functions.nnn## UNIT IInnPROGRAMMING IN C++: Classes and Objects, Constructors and Destructors, Operator Overloading, Inheritance, Virtual Functions and Polymorphism, and Exception Handling.nnn## UNIT IIInnJAVA INTRODUCTION: An overview of Java, Data Types, Variables and Arrays, Operators, Control Statements, Classes, Objects, Methods Inheritance. JAVA PROGRAMMING: Packages, Abstract classes, Interfaces and Inner classes, Exception handling.nnn## UNIT IVnnMULTITHREADING: Introduction to Threads, Multithreading, String handling, Streams and I/O, and Applets.","reference books":"- Lafore R., Object Oriented Programming in C++, Waite Group.n- E. Balagurusamy, Object Oriented Programming with C++, Tata McGraw Hill.n- Deitel and Deitel, “C++ How to Program”, Sixth Edition, Prentice Hall, 2007.n- Herbert Schildt, “Java The complete reference”, Eighth Edition, McGraw Hill Professional, 2011.n- Herbert Schildt, The Complete Reference to C++ Language, McGraw Hill-Osborne.","course outcomes":"At the end of the course student will be able to…n- Understand the concepts of the object oriented programming.n- Comprehend the adeptness of object oriented programming in developing solution to problems demonstrating usage of data abstraction, encapsulation and inheritance.n- Implement patterns involving dynamic binding and utilization of polymorphism.n- Understand syntax and features of exception handling.n- Implement solution to various I/O manipulation operationsn- Create two-dimensional graphic components using applets ."}
