{"course code":"ITPC31","course title":"Mobile Application Development","number of credits":"4","prerequisites":"ITIR12/CEIR12*, CSIR11, ITPC23","course type":"PC","branch":"it","course learning objectives":"- Introduction and characteristics of mobile applications.n- Application models of mobile application frameworks.n- Managing application data and User-interface design for mobile applications.n- Integrating with cloud services.n- Integrating networking, the OS and hardware into mobile-applications.n- Addressing enterprise requirements in mobile applications – performance, scalability, modifiability, availability and security.n- Testing methodologies for mobile applications– Publishing, deployment, maintenance and management.","course content":"- Introduction to mobile devices: Introduction to Mobile Computing, Introduction to Android Development Environment, Mobile devices vs. desktop devices, ARM and intel architectures, Power Management, Screen resolution, Touch interfaces, Application deployment, App Store, Google Play, Windows Store, Development environments: XCode, Eclipse, VS2012, PhoneGAP, etc.; Native vs. web applications. Factors in Developing Mobile Applications: Mobile Software Engineering, Frameworks and Tools, Generic UI Development, Android User; Graphics and Multimedia: Performance and Multithreading, Graphics and UI Performance, Android Graphics, Mobile Agents and Peer-to-Peer Architecture, Android Multimedia;n- Mobile OS Architectures: Comparing and contrasting architectures of all three – Android, iOS and Windows, Underlying OS, Kernel structure and native level programming. Approaches to power management, Security. Android/iOS/Win 8 Survival and basic apps: Building a simple “Hello World” App in all three applications, App-structure, built-in Controls, file access, basic graphics. Platforms and Additional Issues: Development Process, Architecture, Design, Technology Selection, Mobile App Development Hurdles, Testing;n- Android/iOS/Win8 Apps: DB access, network access, contacts/photos/etc. Underneath the frameworks: Native level programming on Android, Low-level programming on (jailbroken) iOS,nWindows low level APIs. Intents and Services: Android Intents and Services, Characteristics of Mobile Applications, Successful Mobile Development; Storing and Retrieving Data: Synchronization and Replication of Mobile Data, Getting the Model Right, Android Storing and Retrieving Data, working with a Content Provider; Putting It All Together: Packaging and Deploying, Performance Best Practices, Android Field Service App.n- Advanced Topics: Power Management: Wake locks and assertions, Low-level OS support, Writing power-smart applications. Augmented Reality via GPS and other sensors: GPS, Accelerometer, Camera. Mobile device security, in depth: Mobile malware, Device protections, iOS “Jailbreaking”, Android “rooting” and Windows’ “defenestration”; Security and Hacking: Active Transactions, More on Security, Hacking Android","reference books":"- Bill Phillips, Chris Stewart, Brian Hardy, and Kristin Marsicano, Android Programming: The Big Nerd Ranch Guide, Big Nerd Ranch LLC, 2nd edition, 2015.n- Valentino Lee, Heather Schneider, and Robbie Schell, Mobile Applications: Architecture, Design and Development, Prentice Hall, 2004.n- Tomasz Nurkiewicz and Ben Christensen, Reactive Programming with RxJava, O’Reilly Media, 2016.n- Brian Fling, Mobile Design and Development, O’Reilly Media, Inc., 2009.n- Maximiliano Firtman, Programming the Mobile Web, O’Reilly Media, Inc., 2nd ed., 2013.n- Cristian Crumlish and Erin Malone, Designing Social Interfaces, 2nd ed., O’Reilly Media, Inc., 2014.n- Suzanne Ginsburg, Designing the iPhone User Experience: A User-Centered Approach to Sketching and Prototyping iPhone Apps, Addison-Wesley Professional, 2010.","course outcomes":"- Understand technology and business trends impacting mobile applicationsn- Be competent with the characterization and architecture of mobile applications.n- Understand enterprise scale requirements of mobile applications.n- Design and develop mobile applications using one application development framework."}
