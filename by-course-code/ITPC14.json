{"course code":"ITPC14","course title":"Object Oriented Programming using C++","number of credits":"4","prerequisites":"CSIR11","course type":"PC","branch":"it","course learning objectives":"- Able to differentiate between structure oriented programming and object oriented programming and to specify simple abstract data types and design implementationsn- Recognize features of object oriented design such as encapsulation, polymorphism, inheritance and composition of systems based on object identity.n- Able to use object oriented programming language like C++ and associated library to develop object oriented programs.n- Able to understand and to use basic fundamentals of Java.","course content":"- Object Oriented Programming and DesignnReview of Abstraction, Objects and other basics, Encapsulation, Information hiding, Method, Signature, Classes and Instances, Polymorphism, Inheritance, Exceptions and Exception Handling with reference to object modeling, Object Oriented Design – Process, Exploration and Analysis.nC++ Programming BasicsnFundamentals: Variables and assignments, Input and Output, Data Types and Expressions, Flow of control, Subprograms: Top down design, Predefined functions, Programmer defined functions, Procedural abstractions, Local variables, Overloading function names, Parameter passing, Structures for diverse data, Structures as function arguments, Initializing structures, Defining classes and member functions, Public and private members ,Constructors for initializations, , Destructors, Copy constructors, Friend functions.nC++ Object Oriented ConceptsnObjects and Classes: Operator overloading , Overloading the assignment operator ,subscript operatorn, this pointer ,Use of file for I/O, Formatting output with stream functions, Character I/O, Inheritance, constructors in inheritance , Standard C++ classes, Derived classes ,Virtual functions, virtual base class.nC++ Data Structures and Advanced TopicsnArrays – Programming with arrays, arrays of classes, arrays as function arguments, Strings, Multidimensional arrays, Arrays of strings, Pointers, Dynamic arrays, Classes and dynamic arrays, Templates – generic classes and functions, namespaces, introduction to STL.nIntroduction to JavanData types, Variables and Assignment, String and Characters, Arrays, Control statements, Loops, Operators.Introduction to Classes, Constructors, this keyword, Static, Local and Instance variables, Methods, Method overloading, Method overriding, subclasses, inheritance, modifiers, polymorphism.","books":"- Herb Schildt: C++ - The Complete Reference, TMH, Delhin- R.Venugopal :Mastering C++,TMH,Delhin- Bruce Eckel : Thinking in C++ Volume I ,Pearson Education,Delhi.n- Horstmann: Computing Concepts with C++ Essentials, John Wiley.n- Joseph O’Neil and Herb Schildt: Teach Yourself JAVA, TMH, Delhi.n- Gary Cornell , Sun Microsystems: Core Java 2,Pearson Education, Delhi.","course outcomes":"- Able to differentiate between structure oriented programming and object oriented programming and to specify simple abstract data types and design implementationsn- Recognize features of object oriented design such as encapsulation, polymorphism, inheritance and composition of systems based on object identity.n- Able to use object oriented programming language like C++ and associated library to develop object oriented programs.n- Able to understand and to use basic fundamentals of Java."}
