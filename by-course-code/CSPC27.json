{"course code":"CSPC27","course title":"Software Engineering","number of credits":"4","prerequisites":"","course type":"PC","branch":"cs","course learning objectives":"- Study the current software engineering techniques and examines the software life-cycle, including software specification, design implementation, testing and maintenance.n- Present software engineering methodologies for the development of Quality, cost-effective, schedule- meeting software.n- Develop an understanding of ethical and professional issues related to Software Project Delivery.","course content":"- Introduction: Introduction of Software (SW), Type of Software, SW Components: Process, People, Project, Product, Software crisis, Software Process Models: Details of People involve in each Process, SDLC methods/models: Build & Fix, Waterfall, Prototype (Evolutionary & Throw-away), Iterative, Incremental iterative, Spiral, RAD, Agile methodology.n- Requirement Analysis & Specifications: Requirement Analysis, Requirement Specification, Approaches to Requirement analysis, Specifying Behavioural & Non-Behavioural Requirements, SRS Components & various User’s of SRS. Introduction of Requirement Specification: Dataflow(DF) Diagram, Data dictionaries, Entity-Relationship (ER) diagram, Object Diagram etc., Requirement Validation.n- Software Design and Testing: Design Architecture and Patterns, Modularity, Function oriented design, Object Oriented Design, Software Testing: Software Testing Strategy and Techniques, Functional testing, Structural testing, Debugging and testing tools, SW/HW reliability, Reliability concepts and models, Reliability allocation, Software Maintenance: Introduction to SW Maintenance and types, SW Maintenance models: Re-engineering & Forward Engineering.n- Software Project Planning: Role of Software Project Planning, Estimation method, Estimation of Effort & Schedule, Software Metrics: Introduction to Size metrics, Data structure metrics, information flow metrics, entropy-based measures, metric analysis. Basic COCOMO, Intermediate COCOMO, Detailed COCOMO, Quality Planning, Planning Parameter, Quality Defect Removal Cycle, Role of Risk Analysis.","reference books":"- R.S. Pressman, Software Engineering – A Practitioner’s Approach, 6th Edition, TMH, 2013.n- Ian Sommerville, Software Engineering, 8th Edition, Addison Wesley, 2009.n- Pankaj Jalote, An Integrated Approach to Software Engineering, Narosa Publishing, 2010.n- K.K.Aggarwal, Yogesh Singh: Software Engineering, New Age International Ltd, 2001.","course outcomes":"- Able to apply the concepts and choose an appropriate SDLC process model for user requirements.n- To analyze requirement techniques like Data flow diagram, Entity relationship diagram etc.n- Understanding the concept of Software Design and emphasizing upon various software metrics used for analyzing the software.n- Demonstrate various testing methodologies and debugging tools for a prototype software.n- Design various software reliability measures to assess the quality of software in case of various faults and failures."}
